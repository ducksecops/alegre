## DYSL REST API design

A REST API for DYSL

### Current features

* Add training sample to a model file
* List supported languages
* Language Identification


#### Add training sample to a model file

Format: POST /api/languages/sample

`curl -X POST http://localhost:3000/api/languages/sample -d '{"text":"this is a new sample","language":"en"}' -H "Content-Type: application/json"`

Returns:

`{
  "type": "success",
  "data": true
}`

In order to use this method, you need to have the corpus files inside the API server.

#### List supported languages in a model

Format: GET /api/languages/anguage

`curl -X GET http://localhost:3000/api/languages/language -H "Content-Type: application/json" -H 

Returns:

`{ "type": "language_code", "data": ["en","pt","es","ar"]}`


#### Language Identification

Format: GET /api/languages/identification

`curl -X GET http://localhost:3000/api/languages/identification -d '{"text":"what is my language?"}' -H "Content-Type: application/json" 

Returns:

`{
  "type": "language",
  "data": [
    [
      0.9556870372582787,
      "en"
    ],
    [
      0.04431296274172125,
      "ms"
    ]
  ]
}`

