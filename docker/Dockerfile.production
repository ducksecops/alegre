# alegre

FROM meedan/ruby
MAINTAINER sysops@meedan.com

#
# SYSTEM CONFIG
#
ENV DEPLOYUSER=mlgdeploy \
    DEPLOYDIR=/app \
    RAILS_ENV=production \
    GITREPO=git@github.com:meedan/alegre.git \
    PRODUCT=bridge \
    APP=alegre \
    TERM=xterm \
    MIN_INSTANCES=4 \
    MAX_POOL_SIZE=12

RUN apt-get install -y \
    gcc \
    python \
    python-setuptools \
    libpython-dev \
    python2.7-dev \
    gfortran \
    libatlas-base-dev

COPY ./docker/bin/* /opt/bin/
RUN chmod 755 /opt/bin/*.sh

RUN easy_install pip

#
# APP CONFIG
#

# nginx for alegre
COPY docker/config/nginx.conf /etc/nginx/sites-available/alegre
RUN ln -s /etc/nginx/sites-available/alegre /etc/nginx/sites-enabled/alegre \
    && rm /etc/nginx/sites-enabled/default

#
# USER CONFIG
#

RUN useradd ${DEPLOYUSER} -s /bin/bash -m \
    && chown -R ${DEPLOYUSER}:${DEPLOYUSER} /home/${DEPLOYUSER}

#
# code deployment
#
RUN mkdir -p $DEPLOYDIR/latest \
    && chown -R ${DEPLOYUSER}:www-data ${DEPLOYDIR}

WORKDIR ${DEPLOYDIR}
COPY ./Gemfile ./latest/Gemfile
COPY ./Gemfile.lock ./latest/Gemfile.lock

# Install and link libraries to the place that RubyPython looks for them
COPY ./requirements.txt ./latest/requirements.txt
RUN pip install -r ./latest/requirements.txt 
RUN /opt/bin/link-python-libs

RUN chown -R ${DEPLOYUSER}:www-data ${DEPLOYDIR}
USER ${DEPLOYUSER}

RUN echo "gem: --no-rdoc --no-ri" > ~/.gemrc \
    && cd ./latest \
    && bundle install --jobs 20 --retry 5 --deployment --without test development

USER root
COPY . ./latest
RUN chown -R ${DEPLOYUSER}:www-data ${DEPLOYDIR}
USER ${DEPLOYUSER}

# setup links for configs and the 'model' directory
RUN /opt/bin/find_and_link_config_files.sh ${DEPLOYDIR}/latest \
    && cd ./latest/lib/langid \
    && mv model model_orig \
    && ln -s ${DEPLOYDIR}/shared/model ./model

RUN mv ./latest ./alegre-$(date -I) && ln -s ./alegre-$(date -I) ./current

#
# RUNTIME ELEMENTS
# expose, cmd

USER root
WORKDIR ${DEPLOYDIR}/current
EXPOSE 80
CMD ["/opt/bin/start.sh"]
